Транзакция - последовательность из нескольких операций, рассматриваемых как единое целое. Для обеспечения корректности транзакционной работы служит журнал транзакций (некоторая структура, дополнительная к базе данных). Он нужен для того, чтобы все действия сначала записывались в журнал транзакций, а затем отражались в базе данных. Это позволяет 1) корректно откатить действия транзакции в случае ошибки; 2) для восстановления целостного состояния базы данных после сбоев. Для восстановления целостного состояния базы после сбоев журнал хранит и старое, и новое значение данных для операций. 
Разграничение доступа между пользователями. В базах данных разграничение доступа имеет еще большее значение чем в системе управления файлами. Использующиеся методы разграничения доступа: мандатный (доступ по метке), дискреционный (для каждого пользователя), ролевой (права по группе). Дискреционный доступ реализуется в БД на уровне относительно крупных объектов. В реляционных БД доступ к столбцам и таблицам. Мандатный доступ может быть на уровнее более мелких объектов БД (например определенный столбец). 
Синхронизация многопользовательской работы.
Каждая БД хранит в себе информацию о своей структуре в метаданных.
Организацию Клиент-Сервер противопоставляют устаревшей системе данных Файл-Сервер.
Наличие некого пользовательского интерфейса (API - Application Programming Interface). Может представлять собой некоторую библиотеку.
СУБД должна содержать средства создания архивных копий данных и восстановления данных их этих копий. 
Таким образом, СУБД решает множество проблем, которые затруднительно или невозможно решить при использовании файловых систем. При создании приложения встает вопрос, достаточно ли ему файловых систем или необходима база данных. Если данные тяжело структурированы, то необходимо использовать БД.

Состав ПО СУБД
Основной программой, входящий в состав СУБД, является ядро СУБД. Она непосредственно осуществляет работу с данными на внешнем запоминающем устройстве, оперирует данными в оперативной памяти. Ядро также обеспечивает ведение транзакционного журнала. Также входит в состав ядра СУБД компилятор декларативного языка запросов данных. Ядро СУБД - основной компонент серверной части. Для обеспечения работы в режиме Клиент-Сервер обычно в состав СУБД входят сетевые драйверы. 
В состав клиентской части СУБД входят утилиты для выполенения тех или иных стандартных операций. Эти утилиты работают с ядром как обычные программы (утилиты например Интерфейс администратора БД, утилиты архивирования и разархивирования БД). Причем БД может выгружаться в характером формате или текстовом формате. В состав клиентской СУБД входят интерфейсы программиста для работы с БД. В состав многих СУБД входят утилиты проверки целостности БД.

Существуют различные способы организации БД: 1) иерархический; 2) реляционный; 3) объектный
Реляционная модель данных. Появилась в конце 60х годов 20 века E.F.Codd. В настоящее время реляционный подход реализован в большинстве крупнейших СУБД (с некоторыми оговорками: некоторые моменты не рекомендуется).
Достоинства: 1) основывает на небольшом числе интуитивно понятных абстракций. 2) на основе этих абстракций возможно простое моделирование наиболее распространенных предметных областей (бухгалтерия, магазин и тд). 3) эти абстракции могут быть точно и формально определены (они могут быть записаны с помощью математческого подхода). 4) теоретическим базисом реляционного подхода служит простой и мощный аппарат теории множества и математической логики. 
Первые прототипы реляционных СУБД появились в 70х годах 20 века. Реляционные СУБД заняли доминирующее положение на рынке БД и вытеснили иерархический сетевые СУБД. На данный момент самые популярные: Oracle, MS SQL Server, IBM DBS
Самое первое понятие - тип данных. Все данные в СУБД являются типизированными. В определение типа входят 1) набор допустимых значений. .. 3) способ внешнего представления. 
Категории типов данных: 1) числовые типы данных. 1.1) точные 1.1.1) целые 1.1.2) дробные 1.2) приближенные 2) строковые типы данных